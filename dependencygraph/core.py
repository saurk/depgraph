# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['datasourceNodes', 'modelNodes', 'stakeholderNodes', 'nodesDict', 'G', 'pos', 'color']

# Cell
import networkx as nx
import matplotlib.pyplot as plt
from random import seed, random
import itertools


# Cell
datasourceNodes = ['Table_' + f'{i:02}' for i in range(0,6)]
modelNodes = ['Model_' + i for i in map(chr, range(ord('A'), ord('D')+1))]
stakeholderNodes = ['Stkh_' + f'{i:02}' for i in range(0,4)]

# Cell
nodesDict = {0: datasourceNodes,
             1 : modelNodes,
             2: stakeholderNodes}

# Cell
G = nx.Graph()

# Cell
for k,v in nodesDict.items():
    for node in v:
        G.add_node(node, role=k)

# Cell
for i in nodesDict[0]:
    for j in nodesDict[1]:
        if random() <= 0.25:
            G.add_edge(i,j, relation='tableInput')


for i in nodesDict[1]:
    for j in nodesDict[2]:
        if random() <= 0.4:
            G.add_edge(i,j, relation='modelConsumer')

# Cell
nx.draw_networkx(G, with_labels=True)

# Cell
pos = nx.multipartite_layout(G, subset_key="role")
color = list(itertools.chain(itertools.repeat('gold', len(datasourceNodes)),
                             itertools.repeat('violet', len(modelNodes)),
                             itertools.repeat('limegreen', len(stakeholderNodes)),
                            ))

# Cell
plt.figure(figsize=(8, 8))
nx.draw(G, pos, node_color=color,with_labels=True)
plt.axis("equal")
plt.show()